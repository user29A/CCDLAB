<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AACAAAAAAACAAACAAABDAAAAAABOAABsAAA8AAAAAABJAABfAABQAAAAAABNAABjAABRAAAAAABZAAB0
        AABBAAAAAFMJAGYAAAAAAFgAAFMAAGEAAAAAAGwAAE4AAGUAAAAAAF0AAFQAAFwAAAAAAFsAAFAAAE4A
        AAAAXxIANw4OAAUFYAAAogAAcgAAAAAAYwAATQAAXgAAAAAATABUAAAAAABXAABmAABKAAAAAFIAAFUA
        AAAGBoAAGRlHAAxRAAAAAIYAAIIAAJ8AAAAAAI0AAFsAAF8AAAAAAFoAAFkAAAAAXgAARhQASQEBAABg
        AABSAAAAAIQAAMsAAAAAAIkAAKAAAABaAABTAAAAAF0AAFcAAAAagAAAQx0dAAAAVAAAAFwAAACCAACp
        AAChAAAAFwCXAACfAAB+AAAAAABTAE8AAAAAAGkAAABCAAKAAAAAAGAAAFUAAFgAAAAAAI4AhioAAGMA
        dQAAcwcAkgAAAAAAXwBiAAAAAABIAABXAAB5AAAAAFwAAF0AAAAAAJoAALIAAHtjAACmAJsAAXx1AMEB
        AAAAAFIAAGEAAAAAagAAgQAAsQAAAAAAoQAAkgAAhQAAAAAAZAAAVhEAAE8AAAAAVgBkAAAAAAB7AAC9
        AACclAAAqRY3AFcvqADJagAAAABPAABJAAAAAJIAAI4rAIAWAAAUAKIAALsAAIgAAAAAAGYAAFEAAFsA
        AAAAAGgAAKQAAM1xAADAKQQApwZwAE+MMQApAFcAAIkAAJEAAABDAYgACXprAIJ9AABLAKYAAK0AAH8A
        AABgAAAAAABQAABeAAAAhwAArksAALYiCgCjAB0ACT5/AFMKpwAAjQAANjouAAAAYQBsAAAAYwAAAAAA
        VQB0AAAAUwkJAABYAABfEhIADg48AAVgAACiAAAAAAB+AE0AAAAAAGcAAEwAAAaAAAAAAEMAGUcMAACG
        AACCAAAAAAB5AFkAAAAAAEAARhQUAAEBVACEAAAAAACzAKAAAABaAAAAAGwaAB0dgAAAAHIAqQAAAAAA
        ngAAlwEAAABRAABpAAAAQgIAAI4AACoAdwAAdU4AcwcAAABIAAAAAHAAAABlAACaAACyAAAAYwCeAACb
        oQB8dQEAAQB2AABqAACBAAAAAACpAAChAAAAAIoAAGQAAFYREQAAVgAAAHsAAL0AAACUAI8AFjeQAC+o
        WABqAHYASQAAAAAAgQAAkgUAjisAABYAqQC7AAAAAACMAABoAACkAAAAcQB9ACkElAAGcKEAjDGKAIkA
        AAABiHAAemsAAH0AfAAApgkArQAAAAAAkQCHAAAASwCRACIKoAAAHaYAPn9hAAqnAACNAAEAAAA8AAAA
        QQAJCWYAAAAAAA+WRFZEJRonLBFirYa2hnU8NYYaJwAAAAAAAAAAAAAABq2WGlAJrUJbjzIiUGIaYnW2
        QoZWBg+mAAAAAAAAAKZCLLYsvTwR/FtOlbxiLEQshgwsVkQsVkQ6ptoAAAAAA4aGDBFEJWL8j6vqlYMX
        CRqtGoa2VhosNRq2PKYAAACtJbaWGpYJhnBLaGjnW2AJGiUaGkQUGmJEJSxERAAApoZWNVa2ViyicOfd
        9OdoIiIslqNCthosQkRQJzwsAADiPGK2LAxEJ3Uy57xlZef0ogy9YiwJJaKiImC0o0QAqFAMVixWtlYn
        YjLnZXiSmudOPCcshhHVW2BwcI9bDAAPVrZWVoZiYiUn1c/SeIl45Vs8LERwwcHnwcHvj3BEAColXb29
        NUK9FwwRwXh4eHjxcGBO6sHnq4DPPltgcEQsYoZiULYnCQxCKicyeHjg4JJbMsHBmmXxZZurMmClPJa9
        PIY1YheiFL0Roo944NHRjOXninh4eHjSWLxbIjVCLAmiYLqVWzJbMlsyz5rg0dHgiZp4eIx4eGXvwaIl
        GrYMonCDW8/dPvSb6po+iuDt7fB4eODg4OBlm/wiYh1iYkKPcI/q55ua8XiJeImJePn57Yzg0dHwZfxO
        XR0aPLa2DPb89m3B5ZJ4eHjgeIzg7db50e35+qCPYK0nCRq2QhpClrQAq8Hl0niM4NHR0dHtP/nt1vp4
        58EnPCxEYrYsJSxQXU6PW1tYZWX6Z+35+fnAwMD54ImaMrwXPIa9hmJWJywsNSKiok5OymCogKCdMGv9
        h/nR4HhlaPwiJSwatkQaViVEHVZEQhGWovZoeOD5oaku+e3R4Hjl5+pgGiwnthG9vRosJ70JQiwqIuV4
        4PkwoFiN+dHRjHib9DKlLCy2lrYJJVYnRBodJ7b2mnjR+Z1lwfyg+uCMeGVtMrSlhraGREJEGixWlkQs
        EeqJjNHtjFhE74/l0vGSZer0lY+9vTyWNVARtiwadb1g3Xh44OB7pVDiVtVb5YDBq+eD/BEMLBRiGmKW
        tkREFzLPZXh40milPBQJQqLVbcFLW3DvddolLJYsVmJiHSxg/KtYZWXKW1A1Ql294kRgIgAATmCtAEYA
        JwAJthpCRCK0wUsyWzJODEKGJ7a9PFCGEaM1Qg8AAAAAuDonvZY8EQC6Ps/vvAxQYr1CRGJiRFZiYh0d
        qAAAAAAAAEa4DCclcLQyYPyGJ0JEJzW9vbYXViU1Gg8AAAAAAAAAAACoHwaWqyJOo60lEa2jJ71EESol
        hjwspgAAAAAAAAAAAAAAAACmEa1WQhS9oh0XQmInGiyGCR0AAAAAAAAAAAAAAAAAAAADFB2iBhHiNQli
        raMMLLalDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>